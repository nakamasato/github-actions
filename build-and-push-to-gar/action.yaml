inputs:
  project:
    description: GCP project id
    required: true
  region:
    description: GCP region
    required: false
    default: asia-northeast1
  repository:
    description: GCP Artifact Registry repository
    required: false
    default: cloud-run-source-deploy
  image:
    description: image name
    required: true
  image_tag:
    description: image tag
    required: false
    default: latest
  workload_identity_provider:
    description: Workload Identity Provider
    required: true
  service_account:
    description: Service Account
    required: true
  dockerfile:
    description: "if you provide Dockerfile path, build with build-push-action. otherwise use buildpacks"
    default: 'Dockerfile'
    required: false
  context:
    description: "docker context for build-push-action"
    default: '.'
    required: false
  build-args:
    description: build-args for build-push-action
    default: ''
    required: false
  driver:
    description: driver for setup-buildx-action
    default: docker-container
    required: false

outputs:
  imageid:
    description: image name
    value: ${{ steps.build-push-action.outputs.imageid }}
  digest:
    description: image digest
    value: ${{ steps.build-push-action.outputs.digest }}
  metadata:
    description: image metadata
    value: ${{ steps.build-push-action.outputs.metadata }}
  full_image_name:
    value: ${{ inputs.region }}-docker.pkg.dev/${{ inputs.project }}/${{ inputs.repository }}/${{ inputs.image }}

name: Build and push to Google Artifact Registry
description: Build and push to Google Artifact Registry
runs:
  using: composite
  steps:
    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
      with:
        token_format: access_token
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@6189d56e4096ee891640bb02ac264be376592d6a # v2.1.2

    - name: Login to GAR
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ${{ inputs.region }}-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      with:
        driver: ${{ inputs.driver }}

    - name: Cache Docker layers
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ inputs.service }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ inputs.service }}-

    - name: Build and push image
      id: build-push-action
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: true
        tags: ${{ inputs.region }}-docker.pkg.dev/${{ inputs.project }}/${{ inputs.repository }}/${{ inputs.image }}:${{ inputs.image_tag }}
        platforms: linux/amd64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        build-args: ${{ inputs.build-args }}

    - name: Move cache
      shell: bash
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
        ls /tmp/.buildx-cache
