inputs:
  project:
    description: GCP project id
    required: true
  region:
    description: GCP region
    required: false
    default: asia-northeast1
  verbosity:
    description: "Cloud Run deploy command verbosity (possible values: debug, info, warning, error, critical, none)"
    required: false
    default: warning
  service:
    description: Cloud Run service name
    required: true
  repository:
    description: GCP Artifact Registry repository
    required: false
    default: cloud-run-source-deploy
  image:
    description: image name
    required: true
  image_tag:
    description: image tag
    required: false
    default: latest
  workload_identity_provider:
    description: Workload Identity Provider
    required: true
  service_account:
    description: Service Account
    required: true
  dockerfile:
    description: "if you provide Dockerfile path, build with build-push-action. otherwise use buildpacks"
    default: ''
    required: false
  context:
    description: "docker context for build-push-action"
    default: '.'
    required: false
  build-args:
    description: build-args for build-push-action
    default: ''
    required: false
  driver:
    description: driver for setup-buildx-action
    default: docker-container
    required: false

outputs:
  url:
    description: CloudRun URL
    value: ${{ steps.get-cloudrun-url.outputs.URL }}

name: Deploy CloudRun
description: Deploy CloudRun
runs:
  using: composite
  steps:
    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@7c6bc770dae815cd3e89ee6cdf493a5fab2cc093 # v3.0.0
      with:
        token_format: access_token
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.service_account }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@aa5489c8933f4cc7a4f7d45035b3b1440c9c10db # v3.0.1

    - name: Login to GAR
      uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
      with:
        registry: ${{ inputs.region }}-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: Set up Docker Buildx
      if: inputs.dockerfile != ''
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      with:
        driver: ${{ inputs.driver }}

    - name: Build and push image
      if: inputs.dockerfile != ''
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: true
        tags: ${{ inputs.region }}-docker.pkg.dev/${{ inputs.project }}/${{ inputs.repository }}/${{ inputs.image }}:${{ inputs.image_tag }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: ${{ inputs.build-args }}

    # Buildpack is slow https://github.com/buildpacks/pack
    - name: Install Pack CLI
      if: inputs.dockerfile == ''
      uses: buildpacks/github-actions/setup-pack@272592019840154a9e6919abf147eaffe6845877 # v5.9.5

    - name: Build app with pack CLI using Buildpack Cache image (see https://buildpacks.io/docs/app-developer-guide/using-cache-image/) & publish to Docker Hub
      if: inputs.dockerfile == ''
      shell: bash
      run: |
        pack build "${{ inputs.region }}-docker.pkg.dev/${{ inputs.project }}/${{ inputs.repository }}/${{ inputs.image }}:${{ inputs.image_tag }}" \
            --tag "${{ inputs.region }}-docker.pkg.dev/${{ inputs.project }}/${{ inputs.repository }}/${{ inputs.image }}:latest" \
            --path . \
            --builder heroku/builder:22 \
            --cache-image "${{ inputs.region }}-docker.pkg.dev/${{ inputs.project }}/${{ inputs.repository }}/${{ inputs.image }}-cache:latest" \
            --publish

    - name: Deploy CloudRun
      shell: bash
      run: |
        gcloud run deploy ${{ inputs.service }} \
            --image "${{ inputs.region }}-docker.pkg.dev/${{ inputs.project }}/${{ inputs.repository }}/${{ inputs.image }}:${{ inputs.image_tag }}" \
            --project "${{ inputs.project }}" \
            --region "${{ inputs.region }}" \
            --verbosity "${{ inputs.verbosity }}"

    - name: Get CloudRun URL
      shell: bash
      id: get-cloudrun-url
      run: |
        set -o pipefail
        echo "URL=$(gcloud run services describe ${{ inputs.service }} --project "${{ inputs.project }}" --region "${{ inputs.region }}" --format json | jq -r .status.url)" >> "$GITHUB_OUTPUT"
