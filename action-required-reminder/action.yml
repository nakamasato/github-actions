name: 'Action Required Reminder'
description: 'Check for unreplied Slack messages and unreviewed GitHub PRs, then send a reminder to Slack'
author: 'nakamasato'

inputs:
  gh_org:
    description: 'Target GitHub organization. If not specified with gh_repos, all repos will be checked'
    required: false
  gh_repos:
    description: 'Target GitHub repositories (comma-separated). If specified, gh_org will be ignored'
    required: false
  slack_workspace:
    description: 'Slack workspace name (subdomain part of your Slack URL)'
    required: true
  slack_channel_id:
    description: 'Slack channel ID for posting reminders'
    required: true
  slack_bot_token:
    description: 'Slack Bot Token for posting messages (optional, uses slack_user_token if not provided)'
    required: false
  slack_user_token:
    description: 'Slack User Token for searching messages (required)'
    required: true
  slack_search_days:
    description: 'Number of days to search for Slack messages'
    required: false
    default: '3'
  slack_user_id:
    description: 'Target Slack user ID to check for unreplied messages'
    required: true
  github_token:
    description: 'GitHub Token for repository access'
    required: false
    default: ${{ github.token }}

runs:
  using: 'composite'
  steps:
    - name: Check unreplied Slack messages
      id: check-slack
      shell: bash
      env:
        SLACK_USER_TOKEN: ${{ inputs.slack_user_token }}
        SLACK_WORKSPACE: ${{ inputs.slack_workspace }}
        SLACK_USER_ID: ${{ inputs.slack_user_id }}
        SLACK_SEARCH_DAYS: ${{ inputs.slack_search_days }}
      run: |
        # Output logs to stderr and capture only URLs from stdout
        echo "Running Slack message check..."
        SLACK_URLS=$("$GITHUB_ACTION_PATH/check_not_replied_slack_message.sh")

        # Save output in JSON format
        echo "urls<<EOF" >> "$GITHUB_OUTPUT"
        echo "$SLACK_URLS" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"

        # Count number of messages
        if [ -z "$SLACK_URLS" ]; then
          echo "count=0" >> "$GITHUB_OUTPUT"
        else
          COUNT=$(echo "$SLACK_URLS" | wc -l | tr -d ' ')
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"
        fi

    - name: Check unreviewed GitHub PRs
      id: check-prs
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github_token }}
        GH_ORG: ${{ inputs.gh_org }}
        GH_REPOS: ${{ inputs.gh_repos }}
      run: |
        echo "Running GitHub PR check..."
        PR_URLS=$("$GITHUB_ACTION_PATH/check_not_reviewed_gh_pr.sh")

        # Save output in JSON format
        echo "urls<<EOF" >> "$GITHUB_OUTPUT"
        echo "$PR_URLS" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"

        # Count number of PRs
        if [ -z "$PR_URLS" ]; then
          echo "count=0" >> "$GITHUB_OUTPUT"
        else
          COUNT=$(echo "$PR_URLS" | wc -l | tr -d ' ')
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"
        fi

    - name: Build Slack message
      id: build-message
      shell: bash
      env:
        SLACK_USER_ID: ${{ inputs.slack_user_id }}
        SLACK_COUNT: ${{ steps.check-slack.outputs.count }}
        SLACK_URLS: ${{ steps.check-slack.outputs.urls }}
        PR_COUNT: ${{ steps.check-prs.outputs.count }}
        PR_URLS: ${{ steps.check-prs.outputs.urls }}
      run: |
        # Build message
        MESSAGE="üëã <@${SLACK_USER_ID}>, this is action required reminder!"

        if [ "$SLACK_COUNT" -gt 0 ]; then
          MESSAGE="${MESSAGE}\n\nüì¨ *Unreplied Slack messages: ${SLACK_COUNT} messages*\n${SLACK_URLS}"
        fi

        if [ "$PR_COUNT" -gt 0 ]; then
          MESSAGE="${MESSAGE}\n\nüîç *Review Requested PR: ${PR_COUNT} PRs*\n${PR_URLS}"
        fi

        if [ "$SLACK_COUNT" -eq 0 ] && [ "$PR_COUNT" -eq 0 ]; then
          MESSAGE="${MESSAGE}\n\n‚ú® Awesome! No action required!"
        else
          MESSAGE="${MESSAGE}\n\nKeep it up!üí™"
        fi

        # Save message to output
        echo "message<<EOF" >> "$GITHUB_OUTPUT"
        echo -e "$MESSAGE" >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"

    - name: Post reminder to Slack
      uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
      with:
        method: chat.postMessage
        token: ${{ inputs.slack_bot_token || inputs.slack_user_token }}
        payload: |
          channel: ${{ inputs.slack_channel_id }}
          text: "${{ steps.build-message.outputs.message }}"

branding:
  icon: 'check-circle'
  color: 'green'
